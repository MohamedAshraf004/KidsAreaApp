@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging

@model PagingList<KidsAreaApp.Models.Reservation>
@*@model IEnumerable<KidsAreaApp.Models.Reservation>*@

@{
    ViewData["Title"] = "Reservation Transactions";
}
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.5.0/css/all.css" integrity="sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU" crossorigin="anonymous">

<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/responsive/2.2.6/css/responsive.dataTables.min.css">
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.23/css/jquery.dataTables.css">

<br />
<br />

<div class="border backgroundWhite">
    <div class="row">
        <div class="col-4">
            <h2 class="text-info"> Transactions List</h2>
        </div>
        <div class="col-8 text-right">
            <div class="btn-group ">
                <a class="btn btn-outline-primary" href="/">Create new</a>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="offset-2">
            <form asp-action="ReservationTransactions">
                <div class="btn-toolbar mb-3" role="toolbar" aria-label="Toolbar with button groups">
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <div class="input-group-text" id="btnGroupAddon">from</div>
                        </div>
                        <input type="date" class="form-control btn-outline-info" name="startDate" aria-label="Input group example" aria-describedby="btnGroupAddon">
                    </div>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <div class="input-group-text" id="btnGroupAddon">To</div>
                        </div>
                        <input type="date" class="form-control btn-outline-info" name="endDate" aria-label="Input group example" aria-describedby="btnGroupAddon">
                    </div>
                    <div class="btn-group mr-2" role="group" aria-label="First group">
                        <button type="submit" class="btn btn-success">Save</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <table id="table_id" class="table table-striped border display">
        <thead class="table-secondary">
            <tr>
                <th>Number</th>
                <th>Start Time</th>
                <th>End Time</th>
                <th>Total Cost</th>
                <th>Discount</th>
                <th>Cost After Discount</th>
                <th>Checked</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Index</td>
                    <td>@item.StartReservationTme</td>
                    <td>@item.EndReservationTme</td>
                    <td>@item.TotatCost</td>
                    <td>@item.Discount</td>
                    <td>@item.CostAfterDiscount</td>
                    <td>
                        @if (item.CostAfterDiscount > 0)
                        {
                            <i class="far fa-check-circle text-success"></i>
                        }
                    </td>
                </tr>
            }

        </tbody>
    </table>


    <div class="row">
        <div class="col">

            Total Reservation Count: @Model.TotalRecordCount
            <nav aria-label="Products navigation example">
                <vc:pager paging-list="@Model" action="ReservationTransactions"></vc:pager>
            </nav>

        </div>
    </div>
    <br />
    @*<div>
            @if (Model.Count() > 0)
            {
                <table class="table table-striped border">
                    <tr class="table-secondary">
                        <th>
                            Number
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.StartReservationTme)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.EndReservationTme)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.TotatCost)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.Discount)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.CostAfterDiscount)
                        </th>
                        <th>

                        </th>

                    </tr>
                    @{
                        int number = 0;
                    }
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @{
                                    number += 1;
                                }
                                @number || @item.Index


                            </td>
                            <td>
                                @Html.DisplayFor(m => item.StartReservationTme)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.EndReservationTme)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.TotatCost)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.Discount)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.CostAfterDiscount)
                            </td>
                            <td>
                                @if (item.CostAfterDiscount > 0)
                                {
                                    <i class="far fa-check-circle text-success"></i>
                                }
                            </td>
                        </tr>
                    }
                </table>

                <br />
            }
            else
            {
                <p>No transactions ...</p>
            }
        </div>*@

    <div class="">
        @{
            double totalCost = 0.0, totalDiscount = 0.0, totalAfterDiscount = 0.0;
            Model.ToList().ForEach(t =>
            {
                totalCost += t.TotatCost;
                totalAfterDiscount += t.CostAfterDiscount;
                totalDiscount += t.Discount;
            });
        }
        <div class="btn-toolbar" role="toolbar" aria-label="Toolbar with button groups">
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text" id="btnGroupAddon">Total Cost: @totalCost</div>
                </div>
            </div>
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text" id="btnGroupAddon">Total Discount: @totalDiscount</div>
                </div>
            </div>
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text" id="btnGroupAddon">Total Cost After Discount: @totalAfterDiscount</div>
                </div>
            </div>
        </div>

    </div>

</div>




@section Scripts{



    <script src="https://cdn.datatables.net/1.10.23/js/jquery.dataTables.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#table_id').DataTable({
                responsive: true,
                "scrollY": 650,
                "scrollCollapse": true
            });
        });
    </script>

}
